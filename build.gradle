apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.8
version = '1.0'


repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {

    //Spring
    compile 'org.springframework:spring-core:4.1.1.RELEASE'
    compile 'org.springframework:spring-context:4.1.1.RELEASE'
    compile 'org.springframework:spring-webmvc:4.1.1.RELEASE'
    compile 'org.springframework:spring-web:4.1.1.RELEASE'
    compile 'org.springframework:spring-aop:4.1.1.RELEASE'
    compile 'org.springframework:spring-orm:4.1.1.RELEASE'

    //Hibernate
    compile 'org.hibernate:hibernate-core:4.3.6.Final'

    //until
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.slf4j:slf4j-log4j12:1.7.7'
    compile 'com.zaxxer:HikariCP:2.1.0'
    compile 'mysql:mysql-connector-java:5.1.31'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.4.3'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'javax:javaee-api:7.0'
    compile 'net.sf.ehcache:ehcache-core:2.6.9'
    compile 'net.sf.ehcache:ehcache-core:2.6.9'
    compile 'cglib:cglib:3.1'

    //Hibernate
    compile('org.hibernate:hibernate-core:4.3.6.Final')
    compile('org.hibernate:hibernate-ehcache:4.3.7.Final')
    compile('cglib:cglib:3.1')
    compile('com.jolbox:bonecp:0.8.0.RELEASE')

    //until
    compile('org.slf4j:slf4j-api:1.7.7')
    compile('org.slf4j:slf4j-log4j12:1.7.7')
    compile('com.zaxxer:HikariCP:2.1.0')
    compile('mysql:mysql-connector-java:5.1.31')
    compile('org.postgresql:postgresql:9.3-1102-jdbc41')
    //test
    testCompile 'junit:junit:4.11'
    testCompile 'org.hibernate:hibernate-testing:4.3.6.Final'
    testCompile 'org.springframework:spring-test:4.1.1.RELEASE'
    testCompile 'com.github.springtestdbunit:spring-test-dbunit:1.1.0'
    testCompile 'org.dbunit:dbunit:2.5.0'
}

task tomcatDebug {
   // Create a new task tomcatDebug, add a description and add it to the same group as tomcatRun
   description "Starting Tomcat with debugger enabled on port 5008."
   group "web application"
} << {
 
   org.gradle.tooling.ProjectConnection conn = org.gradle.tooling.GradleConnector.newConnector()
      .forProjectDirectory(new File("."))
      .connect();
 
   try {
 
      org.gradle.tooling.model.build.BuildEnvironment env = conn.getModel(org.gradle.tooling.model.build.BuildEnvironment.class)
      org.gradle.tooling.BuildLauncher build = conn.newBuild();
  
      build.forTasks("tomcatRun")
      // Enable debug via jvm arguments and append JVM arguments of the currently running vm (except -D).
      build.setJvmArguments("-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5008", *env.java.jvmArguments)
 
      // Run tomcatRun in the new JVM with debug parameters
      build.run()
 
   } finally {
      conn.close();
   }
}